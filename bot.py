import os
import asyncio
from datetime import timedelta
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

TOKEN = os.getenv("TOKEN")
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤
BAD_WORDS = ["–¥—É—Ä–∞–∫", "–ª–æ—Ö", "–º–∞—Ç", "—Å—É–∫–∞", "–±–ª—è–¥—å"]

# === –§–∏–ª—å—Ç—Ä –º–∞—Ç–∞ ===
@dp.message()
async def filter_messages(message: types.Message):
    if message.text:
        text = message.text.lower()
        if any(word in text for word in BAD_WORDS):
            try:
                await message.delete()
                await message.answer(f"‚ö†Ô∏è {message.from_user.full_name}, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞!")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")

# === –ö–æ–º–∞–Ω–¥–∞ /mute —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏ ===
@dp.message(Command("mute"))
async def mute_user(message: types.Message):
    if not message.reply_to_message:
        await message.answer("‚ö†Ô∏è –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å")
        return

    args = message.text.split()
    duration = None
    if len(args) > 1:
        # –ü—Ä–∏–º–µ—Ä: 1—á, 30–º
        time_str = args[1]
        if "—á" in time_str:
            duration = timedelta(hours=int(time_str.replace("—á", "")))
        elif "–º" in time_str:
            duration = timedelta(minutes=int(time_str.replace("–º", "")))

    try:
        await bot.restrict_chat_member(
            chat_id=message.chat.id,
            user_id=message.reply_to_message.from_user.id,
            permissions=types.ChatPermissions(
                can_send_messages=False,
                can_send_media_messages=False,
                can_send_polls=False,
                can_send_other_messages=False,
                can_add_web_page_previews=False,
                can_change_info=False,
                can_invite_users=False,
                can_pin_messages=False
            ),
            until_date=(message.date + duration) if duration else None
        )
        text = f"üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.full_name} –∑–∞–º—É—á–µ–Ω"
        if duration:
            text += f" –Ω–∞ {args[1]}"
        await message.answer(text)
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {e}")

# === –ö–æ–º–∞–Ω–¥–∞ /unmute ===
@dp.message(Command("unmute"))
async def unmute_user(message: types.Message):
    if not message.reply_to_message:
        await message.answer("‚ö†Ô∏è –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º—É—Ç–∏—Ç—å")
        return
    try:
        await bot.restrict_chat_member(
            chat_id=message.chat.id,
            user_id=message.reply_to_message.from_user.id,
            permissions=types.ChatPermissions(
                can_send_messages=True,
                can_send_media_messages=True,
                can_send_polls=True,
                can_send_other_messages=True,
                can_add_web_page_previews=True
            )
        )
        await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.full_name} —Ä–∞–∑–º—É—á–µ–Ω")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {e}")

# === –ö–æ–º–∞–Ω–¥–∞ /ban ===
@dp.message(Command("ban"))
async def ban_user(message: types.Message):
    if not message.reply_to_message:
        await message.answer("‚ö†Ô∏è –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å")
        return
    try:
        await bot.ban_chat_member(
            chat_id=message.chat.id,
            user_id=message.reply_to_message.from_user.id
        )
        await message.answer(f"‚õî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.full_name} –∑–∞–±–∞–Ω–µ–Ω")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {e}")

# === –ö–æ–º–∞–Ω–¥–∞ /kick ===
@dp.message(Command("kick"))
async def kick_user(message: types.Message):
    if not message.reply_to_message:
        await message.answer("‚ö†Ô∏è –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∫–∏–∫–Ω—É—Ç—å")
        return
    try:
        await bot.ban_chat_member(
            chat_id=message.chat.id,
            user_id=message.reply_to_message.from_user.id
        )
        await bot.unban_chat_member(
            chat_id=message.chat.id,
            user_id=message.reply_to_message.from_user.id
        )
        await message.answer(f"üë¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.full_name} –∫–∏–∫–Ω—É—Ç")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {e}")

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
async def main():
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
